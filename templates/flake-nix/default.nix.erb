{
  description = "<%= project %>";

  inputs = {
    nixpkgs.url = github:NixOS/nixpkgs;
    bundix.url = github:sangster/bundix;
  };

  outputs = { self, nixpkgs, bundix }:
    let
      pname = "<%= project %>";
      system = "x86_64-linux";
      version = "0.0.1";
      pkgs = import nixpkgs {
        inherit system;
        overlays = [bundix.overlays.default];
      };

      gems = pkgs.bundixEnv {
        inherit system;
        name = "${pname}-${version}-gems";
        groups = ["default"];
        ruby = pkgs.<%= ruby %>;
<% if gemdir %>
        gemdir = <%= gemdir_path %>;
<% else %>
        gemfile = <%= gemfile_path %>;
        lockfile = <%= lockfile_path %>;
        gemset = <%= gemset_path %>;
<% end %>
      };
    in {
      packages.${system} = {
        # Example package:
        default = pkgs.stdenv.mkDerivation {
          inherit gems pname version;
          ruby = gems.wrappedRuby;
          phases = "installPhase";
          installPhase = ''
            mkdir -p $out/bin
            cat << EOF > "$out/bin/${pname}"
            #!/bin/sh
            exec $ruby/bin/ruby << RUBY
            require 'bundler'
            Bundler.setup(:default)
            puts "Loaded gems:"
            Gem.loaded_specs.each_key { |gem| puts " - #{gem}" }
            RUBY
            EOF
            chmod +x "$out/bin/${pname}"
          '';
        };
        bundled-gems = gems;
      };

      apps.${system} = {
        bundix = { type = "app"; program = "${pkgs.bundix}/bin/bundix"; };
      };

      devShell.${system} =
        let
          dev-gems = with pkgs.bundix; gems.override {
            name = "${pname}-${version}-development-gems";
            groups = ["development"];
          };
        in pkgs.mkShell {
          buildInputs = with dev-gems; [basicEnv wrappedRuby pkgs.bundix];
        };
    };
}
